package knife4go
import (
	"os"
)

func init() {

	f, err := FS.OpenFile(CTX, "/chunk-adb9e944.a3f9d0d8.js", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0777)
	if err != nil {
		panic(err)
	}

	_, err = f.Write([] byte(base64Decoding("KHdpbmRvdy53ZWJwYWNrSnNvbnA9d2luZG93LndlYnBhY2tKc29ucHx8W10pLnB1c2goW1siY2h1bmstYWRiOWU5NDQiXSx7IjE5YWEwIjpmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO24ucihlKTt2YXIgbz0obigiZDNiNyIpLG4oIjNjYTMiKSxuKCJkZGIwIiksbigiYjBjMCIpLG4oIjJiM2QiKSxuKCI5ODYxIiksbigiYjFjNyIpKSxyPW4oImIzMTEiKSxpPW4ubihyKSxjPXtuYW1lOiJEb2N1bWVudCIsY29tcG9uZW50czp7ZWRpdG9yOm4oIjdjOWUiKSxFZGl0b3JTaG93OmZ1bmN0aW9uKCl7cmV0dXJuIFByb21pc2UuYWxsKFtuLmUoImNodW5rLTNiODg4YTY1Iiksbi5lKCJjaHVuay0yMTQyMThmMCIpLG4uZSgiY2h1bmstMmQwYWY0NGUiKV0pLnRoZW4obi5iaW5kKG51bGwsIjBlMzYiKSl9fSxwcm9wczp7YXBpOnt0eXBlOk9iamVjdCxyZXF1aXJlZDohMH0sc3dhZ2dlckluc3RhbmNlOnt0eXBlOk9iamVjdCxyZXF1aXJlZDohMH19LGNvbXB1dGVkOntsYW5ndWFnZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5nbG9iYWxzLmxhbmd1YWdlfX0sZGF0YTpmdW5jdGlvbigpe3JldHVybntvcGVuQXBpUmF3OiIiLG5hbWU6Ik9wZW5BUEkuanNvbiJ9fSxjcmVhdGVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLm9wZW5BcGlSYXc9by5hLmpzb241c3RyaW5naWZ5KHRoaXMuYXBpLm9wZW5BcGlSYXcpLHRoaXMubmFtZT10aGlzLmFwaS5zdW1tYXJ5KyJfT3BlbkFQSS5qc29uIixzZXRUaW1lb3V0KChmdW5jdGlvbigpe3QuY29weU9wZW5BcGkoKX0pLDUwMCl9LG1ldGhvZHM6e2NoYW5nZTpmdW5jdGlvbih0KXt0aGlzLm9wZW5BcGlSYXc9dH0sZ2V0Q3VycmVudEkxOG5JbnN0YW5jZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRpMThuLm1lc3NhZ2VzW3RoaXMubGFuZ3VhZ2VdfSx0cmlnZ2VyRG93bmxvYWRPcGVuOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcGVuQXBpUmF3LGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpLG49e30sbz10aGlzLm5hbWUscj13aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbdF0se3R5cGU6KG4udHlwZXx8InRleHQvcGxhaW4iKSsiO2NoYXJzZXQ9Iisobi5lbmNvZGluZ3x8InV0Zi04Iil9KSk7ZS5ocmVmPXIsZS5kb3dubG9hZD1vfHwiZmlsZSIsZS5jbGljaygpLHdpbmRvdy5VUkwucmV2b2tlT2JqZWN0VVJMKHIpfSxjb3B5T3BlbkFwaTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT0iYnRuQ29weU9wZW5BcGkiK3RoaXMuYXBpLmlkLG49bmV3IGkuYSgiIyIrZSx7dGV4dDpmdW5jdGlvbigpe3JldHVybiB0Lm9wZW5BcGlSYXd9fSk7bi5vbigic3VjY2VzcyIsKGZ1bmN0aW9uKCl7dmFyIGU9dC5nZXRDdXJyZW50STE4bkluc3RhbmNlKCkubWVzc2FnZS5jb3B5Lm9wZW4uc3VjY2Vzczt0LiRtZXNzYWdlLmluZm8oZSl9KSksbi5vbigiZXJyb3IiLChmdW5jdGlvbihlKXt2YXIgbj10LmdldEN1cnJlbnRJMThuSW5zdGFuY2UoKS5tZXNzYWdlLmNvcHkub3Blbi5mYWlsO3QuJG1lc3NhZ2UuaW5mbyhuKX0pKX19fSxhPW4oIjI4NzciKSx1PU9iamVjdChhLmEpKGMsKGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuX3NlbGYuX2M7cmV0dXJuIGUoImRpdiIse3N0YXRpY0NsYXNzOiJkb2N1bWVudCJ9LFtlKCJhLXJvdyIse3N0YXRpY1N0eWxlOnsibWFyZ2luLXRvcCI6IjEwcHgifX0sW2UoImEtYnV0dG9uIix7YXR0cnM6e3R5cGU6InByaW1hcnkiLGlkOiJidG5Db3B5T3BlbkFwaSIrdC5hcGkuaWR9fSxbZSgiYS1pY29uIix7YXR0cnM6e3R5cGU6ImNvcHkifX0pLGUoInNwYW4iLHtkb21Qcm9wczp7aW5uZXJIVE1MOnQuX3ModC4kdCgib3Blbi5jb3B5IikpfX0sW3QuX3YoIiDlpI0g5Yi2ICIpXSldLDEpLGUoImEtYnV0dG9uIix7c3RhdGljU3R5bGU6eyJtYXJnaW4tbGVmdCI6IjEwcHgifSxvbjp7Y2xpY2s6dC50cmlnZ2VyRG93bmxvYWRPcGVufX0sW2UoImEtaWNvbiIse2F0dHJzOnt0eXBlOiJkb3dubG9hZCJ9fSksdC5fdigiICIpLGUoInNwYW4iLHtkb21Qcm9wczp7aW5uZXJIVE1MOnQuX3ModC4kdCgib3Blbi5kb3dubG9hZCIpKX19LFt0Ll92KCIg5LiLIOi9vSAiKV0pXSwxKV0sMSksZSgiYS1yb3ciLHtzdGF0aWNTdHlsZTp7Im1hcmdpbi10b3AiOiIxMHB4In0sYXR0cnM6e2lkOiJrbmlmZTRqRG9jdW1lbnRPcGVuQXBpU2hvd0VkaXRvciJ9fSxbZSgiZWRpdG9yLXNob3ciLHthdHRyczp7dmFsdWU6dC5vcGVuQXBpUmF3fSxvbjp7Y2hhbmdlOnQuY2hhbmdlfX0pXSwxKV0sMSl9KSxbXSwhMSxudWxsLG51bGwsbnVsbCk7ZS5kZWZhdWx0PXUuZXhwb3J0c30sYjMxMTpmdW5jdGlvbih0LGUsbil7Ci8qIQogKiBjbGlwYm9hcmQuanMgdjIuMC4xMQogKiBodHRwczovL2NsaXBib2FyZGpzLmNvbS8KICoKICogTGljZW5zZWQgTUlUIMKpIFplbm8gUm9jaGEKICovCnQuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0PXs2ODY6ZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtuLmQoZSx7ZGVmYXVsdDpmdW5jdGlvbigpe3JldHVybiBFfX0pO3ZhciBvPW4oMjc5KSxyPW4ubihvKSxpPW4oMzcwKSxjPW4ubihpKSxhPW4oODE3KSx1PW4ubihhKTtmdW5jdGlvbiBzKHQpe3RyeXtyZXR1cm4gZG9jdW1lbnQuZXhlY0NvbW1hbmQodCl9Y2F0Y2godCl7cmV0dXJuITF9fXZhciBsPWZ1bmN0aW9uKHQpe3ZhciBlPXUoKSh0KTtyZXR1cm4gcygiY3V0IiksZX0sZj1mdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKHQpe3ZhciBlPSJydGwiPT09ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgiZGlyIiksbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZXh0YXJlYSIpO24uc3R5bGUuZm9udFNpemU9IjEycHQiLG4uc3R5bGUuYm9yZGVyPSIwIixuLnN0eWxlLnBhZGRpbmc9IjAiLG4uc3R5bGUubWFyZ2luPSIwIixuLnN0eWxlLnBvc2l0aW9uPSJhYnNvbHV0ZSIsbi5zdHlsZVtlPyJyaWdodCI6ImxlZnQiXT0iLTk5OTlweCI7dmFyIG89d2luZG93LnBhZ2VZT2Zmc2V0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO3JldHVybiBuLnN0eWxlLnRvcD0iIi5jb25jYXQobywicHgiKSxuLnNldEF0dHJpYnV0ZSgicmVhZG9ubHkiLCIiKSxuLnZhbHVlPXQsbn0odCk7ZS5jb250YWluZXIuYXBwZW5kQ2hpbGQobik7dmFyIG89dSgpKG4pO3JldHVybiBzKCJjb3B5Iiksbi5yZW1vdmUoKSxvfSxwPWZ1bmN0aW9uKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7Y29udGFpbmVyOmRvY3VtZW50LmJvZHl9LG49IiI7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P249Zih0LGUpOnQgaW5zdGFuY2VvZiBIVE1MSW5wdXRFbGVtZW50JiYhWyJ0ZXh0Iiwic2VhcmNoIiwidXJsIiwidGVsIiwicGFzc3dvcmQiXS5pbmNsdWRlcyhudWxsPT10P3ZvaWQgMDp0LnR5cGUpP249Zih0LnZhbHVlLGUpOihuPXUoKSh0KSxzKCJjb3B5IikpLG59O2Z1bmN0aW9uIGQodCl7cmV0dXJuKGQ9ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9KSh0KX12YXIgeT1mdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxlPXQuYWN0aW9uLG49dm9pZCAwPT09ZT8iY29weSI6ZSxvPXQuY29udGFpbmVyLHI9dC50YXJnZXQsaT10LnRleHQ7aWYoImNvcHkiIT09biYmImN1dCIhPT1uKXRocm93IG5ldyBFcnJvcignSW52YWxpZCAiYWN0aW9uIiB2YWx1ZSwgdXNlIGVpdGhlciAiY29weSIgb3IgImN1dCInKTtpZih2b2lkIDAhPT1yKXtpZighcnx8Im9iamVjdCIhPT1kKHIpfHwxIT09ci5ub2RlVHlwZSl0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgInRhcmdldCIgdmFsdWUsIHVzZSBhIHZhbGlkIEVsZW1lbnQnKTtpZigiY29weSI9PT1uJiZyLmhhc0F0dHJpYnV0ZSgiZGlzYWJsZWQiKSl0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgInRhcmdldCIgYXR0cmlidXRlLiBQbGVhc2UgdXNlICJyZWFkb25seSIgaW5zdGVhZCBvZiAiZGlzYWJsZWQiIGF0dHJpYnV0ZScpO2lmKCJjdXQiPT09biYmKHIuaGFzQXR0cmlidXRlKCJyZWFkb25seSIpfHxyLmhhc0F0dHJpYnV0ZSgiZGlzYWJsZWQiKSkpdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkICJ0YXJnZXQiIGF0dHJpYnV0ZS4gWW91IGNhblwndCBjdXQgdGV4dCBmcm9tIGVsZW1lbnRzIHdpdGggInJlYWRvbmx5IiBvciAiZGlzYWJsZWQiIGF0dHJpYnV0ZXMnKX1yZXR1cm4gaT9wKGkse2NvbnRhaW5lcjpvfSk6cj8iY3V0Ij09PW4/bChyKTpwKHIse2NvbnRhaW5lcjpvfSk6dm9pZCAwfTtmdW5jdGlvbiBoKHQpe3JldHVybihoPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiB0fSkodCl9ZnVuY3Rpb24gbSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLCJ2YWx1ZSJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fWZ1bmN0aW9uIHYodCxlKXtyZXR1cm4odj1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19wcm90b19fPWUsdH0pKHQsZSl9ZnVuY3Rpb24gZyh0KXt2YXIgZT1mdW5jdGlvbigpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgUmVmbGVjdHx8IVJlZmxlY3QuY29uc3RydWN0KXJldHVybiExO2lmKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pcmV0dXJuITE7aWYoImZ1bmN0aW9uIj09dHlwZW9mIFByb3h5KXJldHVybiEwO3RyeXtyZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLFtdLChmdW5jdGlvbigpe30pKSksITB9Y2F0Y2godCl7cmV0dXJuITF9fSgpO3JldHVybiBmdW5jdGlvbigpe3ZhciBuLG89dyh0KTtpZihlKXt2YXIgcj13KHRoaXMpLmNvbnN0cnVjdG9yO249UmVmbGVjdC5jb25zdHJ1Y3Qobyxhcmd1bWVudHMscil9ZWxzZSBuPW8uYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBiKHRoaXMsbil9fWZ1bmN0aW9uIGIodCxlKXtyZXR1cm4hZXx8Im9iamVjdCIhPT1oKGUpJiYiZnVuY3Rpb24iIT10eXBlb2YgZT9mdW5jdGlvbih0KXtpZih2b2lkIDA9PT10KXRocm93IG5ldyBSZWZlcmVuY2VFcnJvcigidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkIik7cmV0dXJuIHR9KHQpOmV9ZnVuY3Rpb24gdyh0KXtyZXR1cm4odz1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKHQpfSkodCl9ZnVuY3Rpb24gUyh0LGUpe3ZhciBuPSJkYXRhLWNsaXBib2FyZC0iLmNvbmNhdCh0KTtpZihlLmhhc0F0dHJpYnV0ZShuKSlyZXR1cm4gZS5nZXRBdHRyaWJ1dGUobil9dmFyIEU9ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUmJm51bGwhPT1lKXRocm93IG5ldyBUeXBlRXJyb3IoIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uIik7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlJiZlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOnQsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pLGUmJnYodCxlKX0obix0KTt2YXIgZT1nKG4pO2Z1bmN0aW9uIG4odCxvKXt2YXIgcjtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX0odGhpcyxuKSwocj1lLmNhbGwodGhpcykpLnJlc29sdmVPcHRpb25zKG8pLHIubGlzdGVuQ2xpY2sodCkscn1yZXR1cm4gZnVuY3Rpb24odCxlLG4pe2UmJm0odC5wcm90b3R5cGUsZSksbiYmbSh0LG4pfShuLFt7a2V5OiJyZXNvbHZlT3B0aW9ucyIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e307dGhpcy5hY3Rpb249ImZ1bmN0aW9uIj09dHlwZW9mIHQuYWN0aW9uP3QuYWN0aW9uOnRoaXMuZGVmYXVsdEFjdGlvbix0aGlzLnRhcmdldD0iZnVuY3Rpb24iPT10eXBlb2YgdC50YXJnZXQ/dC50YXJnZXQ6dGhpcy5kZWZhdWx0VGFyZ2V0LHRoaXMudGV4dD0iZnVuY3Rpb24iPT10eXBlb2YgdC50ZXh0P3QudGV4dDp0aGlzLmRlZmF1bHRUZXh0LHRoaXMuY29udGFpbmVyPSJvYmplY3QiPT09aCh0LmNvbnRhaW5lcik/dC5jb250YWluZXI6ZG9jdW1lbnQuYm9keX19LHtrZXk6Imxpc3RlbkNsaWNrIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3RoaXMubGlzdGVuZXI9YygpKHQsImNsaWNrIiwoZnVuY3Rpb24odCl7cmV0dXJuIGUub25DbGljayh0KX0pKX19LHtrZXk6Im9uQ2xpY2siLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZGVsZWdhdGVUYXJnZXR8fHQuY3VycmVudFRhcmdldCxuPXRoaXMuYWN0aW9uKGUpfHwiY29weSIsbz15KHthY3Rpb246bixjb250YWluZXI6dGhpcy5jb250YWluZXIsdGFyZ2V0OnRoaXMudGFyZ2V0KGUpLHRleHQ6dGhpcy50ZXh0KGUpfSk7dGhpcy5lbWl0KG8/InN1Y2Nlc3MiOiJlcnJvciIse2FjdGlvbjpuLHRleHQ6byx0cmlnZ2VyOmUsY2xlYXJTZWxlY3Rpb246ZnVuY3Rpb24oKXtlJiZlLmZvY3VzKCksd2luZG93LmdldFNlbGVjdGlvbigpLnJlbW92ZUFsbFJhbmdlcygpfX0pfX0se2tleToiZGVmYXVsdEFjdGlvbiIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIFMoImFjdGlvbiIsdCl9fSx7a2V5OiJkZWZhdWx0VGFyZ2V0Iix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT1TKCJ0YXJnZXQiLHQpO2lmKGUpcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZSl9fSx7a2V5OiJkZWZhdWx0VGV4dCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIFMoInRleHQiLHQpfX0se2tleToiZGVzdHJveSIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmxpc3RlbmVyLmRlc3Ryb3koKX19XSxbe2tleToiY29weSIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOntjb250YWluZXI6ZG9jdW1lbnQuYm9keX07cmV0dXJuIHAodCxlKX19LHtrZXk6ImN1dCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIGwodCl9fSx7a2V5OiJpc1N1cHBvcnRlZCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06WyJjb3B5IiwiY3V0Il0sZT0ic3RyaW5nIj09dHlwZW9mIHQ/W3RdOnQsbj0hIWRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN1cHBvcnRlZDtyZXR1cm4gZS5mb3JFYWNoKChmdW5jdGlvbih0KXtuPW4mJiEhZG9jdW1lbnQucXVlcnlDb21tYW5kU3VwcG9ydGVkKHQpfSkpLG59fV0pLG59KHIoKSl9LDgyODpmdW5jdGlvbih0KXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIEVsZW1lbnQmJiFFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzKXt2YXIgZT1FbGVtZW50LnByb3RvdHlwZTtlLm1hdGNoZXM9ZS5tYXRjaGVzU2VsZWN0b3J8fGUubW96TWF0Y2hlc1NlbGVjdG9yfHxlLm1zTWF0Y2hlc1NlbGVjdG9yfHxlLm9NYXRjaGVzU2VsZWN0b3J8fGUud2Via2l0TWF0Y2hlc1NlbGVjdG9yfXQuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2Zvcig7dCYmOSE9PXQubm9kZVR5cGU7KXtpZigiZnVuY3Rpb24iPT10eXBlb2YgdC5tYXRjaGVzJiZ0Lm1hdGNoZXMoZSkpcmV0dXJuIHQ7dD10LnBhcmVudE5vZGV9fX0sNDM4OmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1uKDgyOCk7ZnVuY3Rpb24gcih0LGUsbixvLHIpe3ZhciBjPWkuYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXIobixjLHIpLHtkZXN0cm95OmZ1bmN0aW9uKCl7dC5yZW1vdmVFdmVudExpc3RlbmVyKG4sYyxyKX19fWZ1bmN0aW9uIGkodCxlLG4scil7cmV0dXJuIGZ1bmN0aW9uKG4pe24uZGVsZWdhdGVUYXJnZXQ9byhuLnRhcmdldCxlKSxuLmRlbGVnYXRlVGFyZ2V0JiZyLmNhbGwodCxuKX19dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLG8saSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQuYWRkRXZlbnRMaXN0ZW5lcj9yLmFwcGx5KG51bGwsYXJndW1lbnRzKToiZnVuY3Rpb24iPT10eXBlb2Ygbj9yLmJpbmQobnVsbCxkb2N1bWVudCkuYXBwbHkobnVsbCxhcmd1bWVudHMpOigic3RyaW5nIj09dHlwZW9mIHQmJih0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodCkpLEFycmF5LnByb3RvdHlwZS5tYXAuY2FsbCh0LChmdW5jdGlvbih0KXtyZXR1cm4gcih0LGUsbixvLGkpfSkpKX19LDg3OTpmdW5jdGlvbih0LGUpe2Uubm9kZT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmdCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50JiYxPT09dC5ub2RlVHlwZX0sZS5ub2RlTGlzdD1mdW5jdGlvbih0KXt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCk7cmV0dXJuIHZvaWQgMCE9PXQmJigiW29iamVjdCBOb2RlTGlzdF0iPT09bnx8IltvYmplY3QgSFRNTENvbGxlY3Rpb25dIj09PW4pJiYibGVuZ3RoImluIHQmJigwPT09dC5sZW5ndGh8fGUubm9kZSh0WzBdKSl9LGUuc3RyaW5nPWZ1bmN0aW9uKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdHx8dCBpbnN0YW5jZW9mIFN0cmluZ30sZS5mbj1mdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBGdW5jdGlvbl0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfX0sMzcwOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbz1uKDg3OSkscj1uKDQzOCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXtpZighdCYmIWUmJiFuKXRocm93IG5ldyBFcnJvcigiTWlzc2luZyByZXF1aXJlZCBhcmd1bWVudHMiKTtpZighby5zdHJpbmcoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiU2Vjb25kIGFyZ3VtZW50IG11c3QgYmUgYSBTdHJpbmciKTtpZighby5mbihuKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJUaGlyZCBhcmd1bWVudCBtdXN0IGJlIGEgRnVuY3Rpb24iKTtpZihvLm5vZGUodCkpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKGUsbikse2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxuKX19fSh0LGUsbik7aWYoby5ub2RlTGlzdCh0KSlyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3JldHVybiBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHQsKGZ1bmN0aW9uKHQpe3QuYWRkRXZlbnRMaXN0ZW5lcihlLG4pfSkpLHtkZXN0cm95OmZ1bmN0aW9uKCl7QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCh0LChmdW5jdGlvbih0KXt0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxuKX0pKX19fSh0LGUsbik7aWYoby5zdHJpbmcodCkpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gcihkb2N1bWVudC5ib2R5LHQsZSxuKX0odCxlLG4pO3Rocm93IG5ldyBUeXBlRXJyb3IoIkZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBTdHJpbmcsIEhUTUxFbGVtZW50LCBIVE1MQ29sbGVjdGlvbiwgb3IgTm9kZUxpc3QiKX19LDgxNzpmdW5jdGlvbih0KXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU7aWYoIlNFTEVDVCI9PT10Lm5vZGVOYW1lKXQuZm9jdXMoKSxlPXQudmFsdWU7ZWxzZSBpZigiSU5QVVQiPT09dC5ub2RlTmFtZXx8IlRFWFRBUkVBIj09PXQubm9kZU5hbWUpe3ZhciBuPXQuaGFzQXR0cmlidXRlKCJyZWFkb25seSIpO258fHQuc2V0QXR0cmlidXRlKCJyZWFkb25seSIsIiIpLHQuc2VsZWN0KCksdC5zZXRTZWxlY3Rpb25SYW5nZSgwLHQudmFsdWUubGVuZ3RoKSxufHx0LnJlbW92ZUF0dHJpYnV0ZSgicmVhZG9ubHkiKSxlPXQudmFsdWV9ZWxzZXt0Lmhhc0F0dHJpYnV0ZSgiY29udGVudGVkaXRhYmxlIikmJnQuZm9jdXMoKTt2YXIgbz13aW5kb3cuZ2V0U2VsZWN0aW9uKCkscj1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO3Iuc2VsZWN0Tm9kZUNvbnRlbnRzKHQpLG8ucmVtb3ZlQWxsUmFuZ2VzKCksby5hZGRSYW5nZShyKSxlPW8udG9TdHJpbmcoKX1yZXR1cm4gZX19LDI3OTpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKCl7fWUucHJvdG90eXBlPXtvbjpmdW5jdGlvbih0LGUsbil7dmFyIG89dGhpcy5lfHwodGhpcy5lPXt9KTtyZXR1cm4ob1t0XXx8KG9bdF09W10pKS5wdXNoKHtmbjplLGN0eDpufSksdGhpc30sb25jZTpmdW5jdGlvbih0LGUsbil7dmFyIG89dGhpcztmdW5jdGlvbiByKCl7by5vZmYodCxyKSxlLmFwcGx5KG4sYXJndW1lbnRzKX1yZXR1cm4gci5fPWUsdGhpcy5vbih0LHIsbil9LGVtaXQ6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLG49KCh0aGlzLmV8fCh0aGlzLmU9e30pKVt0XXx8W10pLnNsaWNlKCksbz0wLHI9bi5sZW5ndGg7bzxyO28rKyluW29dLmZuLmFwcGx5KG5bb10uY3R4LGUpO3JldHVybiB0aGlzfSxvZmY6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmV8fCh0aGlzLmU9e30pLG89blt0XSxyPVtdO2lmKG8mJmUpZm9yKHZhciBpPTAsYz1vLmxlbmd0aDtpPGM7aSsrKW9baV0uZm4hPT1lJiZvW2ldLmZuLl8hPT1lJiZyLnB1c2gob1tpXSk7cmV0dXJuIHIubGVuZ3RoP25bdF09cjpkZWxldGUgblt0XSx0aGlzfX0sdC5leHBvcnRzPWUsdC5leHBvcnRzLlRpbnlFbWl0dGVyPWV9fSxlPXt9O2Z1bmN0aW9uIG4obyl7aWYoZVtvXSlyZXR1cm4gZVtvXS5leHBvcnRzO3ZhciByPWVbb109e2V4cG9ydHM6e319O3JldHVybiB0W29dKHIsci5leHBvcnRzLG4pLHIuZXhwb3J0c31yZXR1cm4gbi5uPWZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiB0LmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIHR9O3JldHVybiBuLmQoZSx7YTplfSksZX0sbi5kPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBvIGluIGUpbi5vKGUsbykmJiFuLm8odCxvKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbyx7ZW51bWVyYWJsZTohMCxnZXQ6ZVtvXX0pfSxuLm89ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9LG4oNjg2KX0oKS5kZWZhdWx0fX1dKTs=")))
	if err != nil {
		panic(err)
	}

	err = f.Close()
	if err != nil {
		panic(err)
	}
}